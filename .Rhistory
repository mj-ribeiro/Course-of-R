#
#Sincerely,
#Kirill Eremenko
#www.superdatascience.com
#Copyright: These datasets were prepared using publicly available data.
#           However, theses scripts are subject to Copyright Laws.
#           If you wish to use these R scripts outside of the R Programming Course
#           by Kirill Eremenko, you may do so by referencing www.superdatascience.com in your work.
#Comments:
#Seasons are labeled based on the first year in the season
#E.g. the 2012-2013 season is preseneted as simply 2012
#Notes and Corrections to the data:
#Kevin Durant: 2006 - College Data Used
#Kevin Durant: 2005 - Proxied With 2006 Data
#Derrick Rose: 2012 - Did Not Play
#Derrick Rose: 2007 - College Data Used
#Derrick Rose: 2006 - Proxied With 2007 Data
#Derrick Rose: 2005 - Proxied With 2007 Data
#Seasons
Seasons <- c("2005","2006","2007","2008","2009","2010","2011","2012","2013","2014")
#Players
Players <- c("KobeBryant","JoeJohnson","LeBronJames","CarmeloAnthony","DwightHoward","ChrisBosh","ChrisPaul","KevinDurant","DerrickRose","DwayneWade")
#Salaries
KobeBryant_Salary <- c(15946875,17718750,19490625,21262500,23034375,24806250,25244493,27849149,30453805,23500000)
JoeJohnson_Salary <- c(12000000,12744189,13488377,14232567,14976754,16324500,18038573,19752645,21466718,23180790)
LeBronJames_Salary <- c(4621800,5828090,13041250,14410581,15779912,14500000,16022500,17545000,19067500,20644400)
CarmeloAnthony_Salary <- c(3713640,4694041,13041250,14410581,15779912,17149243,18518574,19450000,22407474,22458000)
DwightHoward_Salary <- c(4493160,4806720,6061274,13758000,15202590,16647180,18091770,19536360,20513178,21436271)
ChrisBosh_Salary <- c(3348000,4235220,12455000,14410581,15779912,14500000,16022500,17545000,19067500,20644400)
ChrisPaul_Salary <- c(3144240,3380160,3615960,4574189,13520500,14940153,16359805,17779458,18668431,20068563)
KevinDurant_Salary <- c(0,0,4171200,4484040,4796880,6053663,15506632,16669630,17832627,18995624)
DerrickRose_Salary <- c(0,0,0,4822800,5184480,5546160,6993708,16402500,17632688,18862875)
DwayneWade_Salary <- c(3031920,3841443,13041250,14410581,15779912,14200000,15691000,17182000,18673000,15000000)
#Matrix
Salary <- rbind(KobeBryant_Salary, JoeJohnson_Salary, LeBronJames_Salary, CarmeloAnthony_Salary, DwightHoward_Salary, ChrisBosh_Salary, ChrisPaul_Salary, KevinDurant_Salary, DerrickRose_Salary, DwayneWade_Salary)
rm(KobeBryant_Salary, JoeJohnson_Salary, CarmeloAnthony_Salary, DwightHoward_Salary, ChrisBosh_Salary, LeBronJames_Salary, ChrisPaul_Salary, DerrickRose_Salary, DwayneWade_Salary, KevinDurant_Salary)
colnames(Salary) <- Seasons
rownames(Salary) <- Players
#Games
KobeBryant_G <- c(80,77,82,82,73,82,58,78,6,35)
JoeJohnson_G <- c(82,57,82,79,76,72,60,72,79,80)
LeBronJames_G <- c(79,78,75,81,76,79,62,76,77,69)
CarmeloAnthony_G <- c(80,65,77,66,69,77,55,67,77,40)
DwightHoward_G <- c(82,82,82,79,82,78,54,76,71,41)
ChrisBosh_G <- c(70,69,67,77,70,77,57,74,79,44)
ChrisPaul_G <- c(78,64,80,78,45,80,60,70,62,82)
KevinDurant_G <- c(35,35,80,74,82,78,66,81,81,27)
DerrickRose_G <- c(40,40,40,81,78,81,39,0,10,51)
DwayneWade_G <- c(75,51,51,79,77,76,49,69,54,62)
#Matrix
Games <- rbind(KobeBryant_G, JoeJohnson_G, LeBronJames_G, CarmeloAnthony_G, DwightHoward_G, ChrisBosh_G, ChrisPaul_G, KevinDurant_G, DerrickRose_G, DwayneWade_G)
rm(KobeBryant_G, JoeJohnson_G, CarmeloAnthony_G, DwightHoward_G, ChrisBosh_G, LeBronJames_G, ChrisPaul_G, DerrickRose_G, DwayneWade_G, KevinDurant_G)
colnames(Games) <- Seasons
rownames(Games) <- Players
#Minutes Played
KobeBryant_MP <- c(3277,3140,3192,2960,2835,2779,2232,3013,177,1207)
JoeJohnson_MP <- c(3340,2359,3343,3124,2886,2554,2127,2642,2575,2791)
LeBronJames_MP <- c(3361,3190,3027,3054,2966,3063,2326,2877,2902,2493)
CarmeloAnthony_MP <- c(2941,2486,2806,2277,2634,2751,1876,2482,2982,1428)
DwightHoward_MP <- c(3021,3023,3088,2821,2843,2935,2070,2722,2396,1223)
ChrisBosh_MP <- c(2751,2658,2425,2928,2526,2795,2007,2454,2531,1556)
ChrisPaul_MP <- c(2808,2353,3006,3002,1712,2880,2181,2335,2171,2857)
KevinDurant_MP <- c(1255,1255,2768,2885,3239,3038,2546,3119,3122,913)
DerrickRose_MP <- c(1168,1168,1168,3000,2871,3026,1375,0,311,1530)
DwayneWade_MP <- c(2892,1931,1954,3048,2792,2823,1625,2391,1775,1971)
#Matrix
MinutesPlayed <- rbind(KobeBryant_MP, JoeJohnson_MP, LeBronJames_MP, CarmeloAnthony_MP, DwightHoward_MP, ChrisBosh_MP, ChrisPaul_MP, KevinDurant_MP, DerrickRose_MP, DwayneWade_MP)
rm(KobeBryant_MP, JoeJohnson_MP, CarmeloAnthony_MP, DwightHoward_MP, ChrisBosh_MP, LeBronJames_MP, ChrisPaul_MP, DerrickRose_MP, DwayneWade_MP, KevinDurant_MP)
colnames(MinutesPlayed) <- Seasons
rownames(MinutesPlayed) <- Players
#Field Goals
KobeBryant_FG <- c(978,813,775,800,716,740,574,738,31,266)
JoeJohnson_FG <- c(632,536,647,620,635,514,423,445,462,446)
LeBronJames_FG <- c(875,772,794,789,768,758,621,765,767,624)
CarmeloAnthony_FG <- c(756,691,728,535,688,684,441,669,743,358)
DwightHoward_FG <- c(468,526,583,560,510,619,416,470,473,251)
ChrisBosh_FG <- c(549,543,507,615,600,524,393,485,492,343)
ChrisPaul_FG <- c(407,381,630,631,314,430,425,412,406,568)
KevinDurant_FG <- c(306,306,587,661,794,711,643,731,849,238)
DerrickRose_FG <- c(208,208,208,574,672,711,302,0,58,338)
DwayneWade_FG <- c(699,472,439,854,719,692,416,569,415,509)
#Matrix
FieldGoals <- rbind(KobeBryant_FG, JoeJohnson_FG, LeBronJames_FG, CarmeloAnthony_FG, DwightHoward_FG, ChrisBosh_FG, ChrisPaul_FG, KevinDurant_FG, DerrickRose_FG, DwayneWade_FG)
rm(KobeBryant_FG, JoeJohnson_FG, LeBronJames_FG, CarmeloAnthony_FG, DwightHoward_FG, ChrisBosh_FG, ChrisPaul_FG, KevinDurant_FG, DerrickRose_FG, DwayneWade_FG)
colnames(FieldGoals) <- Seasons
rownames(FieldGoals) <- Players
#Field Goal Attempts
KobeBryant_FGA <- c(2173,1757,1690,1712,1569,1639,1336,1595,73,713)
JoeJohnson_FGA <- c(1395,1139,1497,1420,1386,1161,931,1052,1018,1025)
LeBronJames_FGA <- c(1823,1621,1642,1613,1528,1485,1169,1354,1353,1279)
CarmeloAnthony_FGA <- c(1572,1453,1481,1207,1502,1503,1025,1489,1643,806)
DwightHoward_FGA <- c(881,873,974,979,834,1044,726,813,800,423)
ChrisBosh_FGA <- c(1087,1094,1027,1263,1158,1056,807,907,953,745)
ChrisPaul_FGA <- c(947,871,1291,1255,637,928,890,856,870,1170)
KevinDurant_FGA <- c(647,647,1366,1390,1668,1538,1297,1433,1688,467)
DerrickRose_FGA <- c(436,436,436,1208,1373,1597,695,0,164,835)
DwayneWade_FGA <- c(1413,962,937,1739,1511,1384,837,1093,761,1084)
#Matrix
FieldGoalAttempts <- rbind(KobeBryant_FGA, JoeJohnson_FGA, LeBronJames_FGA, CarmeloAnthony_FGA, DwightHoward_FGA, ChrisBosh_FGA, ChrisPaul_FGA, KevinDurant_FGA, DerrickRose_FGA, DwayneWade_FGA)
rm(KobeBryant_FGA, JoeJohnson_FGA, LeBronJames_FGA, CarmeloAnthony_FGA, DwightHoward_FGA, ChrisBosh_FGA, ChrisPaul_FGA, KevinDurant_FGA, DerrickRose_FGA, DwayneWade_FGA)
colnames(FieldGoalAttempts) <- Seasons
rownames(FieldGoalAttempts) <- Players
#Points
KobeBryant_PTS <- c(2832,2430,2323,2201,1970,2078,1616,2133,83,782)
JoeJohnson_PTS <- c(1653,1426,1779,1688,1619,1312,1129,1170,1245,1154)
LeBronJames_PTS <- c(2478,2132,2250,2304,2258,2111,1683,2036,2089,1743)
CarmeloAnthony_PTS <- c(2122,1881,1978,1504,1943,1970,1245,1920,2112,966)
DwightHoward_PTS <- c(1292,1443,1695,1624,1503,1784,1113,1296,1297,646)
ChrisBosh_PTS <- c(1572,1561,1496,1746,1678,1438,1025,1232,1281,928)
ChrisPaul_PTS <- c(1258,1104,1684,1781,841,1268,1189,1186,1185,1564)
KevinDurant_PTS <- c(903,903,1624,1871,2472,2161,1850,2280,2593,686)
DerrickRose_PTS <- c(597,597,597,1361,1619,2026,852,0,159,904)
DwayneWade_PTS <- c(2040,1397,1254,2386,2045,1941,1082,1463,1028,1331)
#Matrix
Points <- rbind(KobeBryant_PTS, JoeJohnson_PTS, LeBronJames_PTS, CarmeloAnthony_PTS, DwightHoward_PTS, ChrisBosh_PTS, ChrisPaul_PTS, KevinDurant_PTS, DerrickRose_PTS, DwayneWade_PTS)
rm(KobeBryant_PTS, JoeJohnson_PTS, LeBronJames_PTS, CarmeloAnthony_PTS, DwightHoward_PTS, ChrisBosh_PTS, ChrisPaul_PTS, KevinDurant_PTS, DerrickRose_PTS, DwayneWade_PTS)
colnames(Points) <- Seasons
rownames(Points) <- Players
Salary
rownames(Salary)
colnames(Salary)
Salary['JoeJohnson', 2014]
Salary['JoeJohnson', '2014']
FieldGoals/Games
round(FieldGoals/Games)
round(FieldGoals/Games, 1)
gpg = round(FieldGoals/Games, 1)   #goals per game
mean(gpg)
mean(gpg['KobeBryant', ])
std(gpg['KobeBryant', ])
sd(gpg['KobeBryant', ])
max(gpg['KobeBryant', ])
which(gpg %in% max(gpg['KobeBryant', ]))
max(gpg['KobeBryant', ])
# Statistics of KobeBryant
gpg
gpg['KobeBryant', 1]
colnames(gpg['KobeBryant', 1])
colnames(gpg)
colnames(gpg[1])
colnames(gpg[ ,1])
colnames(gpg[1])
colnames(gpg[1,1])
colnames(gpg)
r = colnames(gpg)
r[1]
# Statistics of KobeBryant
gpg
plot(MinutesPlayed['KobeBryant', ], Salary[['KobeBryant', ]] )
plot(MinutesPlayed['KobeBryant', ], Salary['KobeBryant', ] )
reg = lm.fit(MinutesPlayed['KobeBryant', ], Salary['KobeBryant', ] )
reg = lm(MinutesPlayed['KobeBryant', ]~ Salary['KobeBryant', ])
summary(reg)
reg = lm(Salary['KobeBryant', ] ~ MinutesPlayed['KobeBryant', ])
summary(reg)
plot(Salary['KobeBryant', ] ~ MinutesPlayed['KobeBryant', ])
reg2 = lm(Salary['KobeBryant', ] ~ Points['KobeBryant', ])
summary(reg2)
matplot(t(FieldGoals))
matplot(t(FieldGoals), type = 'b')
matplot(t(FieldGoals), type = 'b', pch = 15:18)
matplot(t(FieldGoals), type = 'b', pch = 15:18, col=c(1:4, 6))
c(1:4, 6)
windows()
matplot(t(FieldGoals), type = 'b', pch = 15:18, col=c(1:4, 6))
windows()
matplot(t(FieldGoals), type = 'b', pch = 15:18, col=c(1:4, 6))
legend('bottomleft', inset=0.01, legend = Players,col=c(1:4, 6), horiz = F )
windows()
matplot(t(FieldGoals), type = 'b', pch = 14:17, col=c(1:4, 6))
legend('bottomleft', inset=0.01, legend = Players, pch=14:17, col=c(1:4, 6), horiz = F )
windows()
matplot(t(FieldGoals/Salary), type = 'b', pch = 14:17, col=c(1:4, 6))
legend('bottomleft', inset=0.01, legend = Players, pch=14:17, col=c(1:4, 6), horiz = F )
x = c(1, 44, 6, 33, 0, 1)
x[c(1:3)]
x[c(1,3)]
Games
Games[1:3, 1:6]
Games[c(5, 10), c(9, 10)]
Games[ , c('2008', '2011')]
Games[ c('KobeBryant ', 'ChrisBosh ') , c('2008', '2011')]
Games[ c('KobeBryant', 'ChrisBosh') , c('2008', '2011')]
Games[1, 1:6]
Games[1, 1:6, drop=FALSE]
## Graphs
data = MinutesPlayed[c(1:3), ]
matplot(t(data), type = 'b', pch = 14:17, col=c(1:4, 6))
legend('bottomleft', inset=0.01, legend = Players, pch=14:17, col=c(1:4, 6), horiz = F )
data
matplot(t(data), type = 'b', pch = 14:17, col=c(1:4, 6))
legend('bottomleft', inset=0.01, legend = Players, pch=14:17, col=c(1:4, 6), horiz = F )
matplot(t(data), type = 'b', pch = 14:17, col=c(1:4, 6))
legend('bottomleft', inset=0.01, legend = Players[1:3], pch=14:17, col=c(1:4, 6), horiz = F )
myplot = function(){
data = MinutesPlayed[c(1:3), ]
matplot(t(data), type = 'b', pch = 14:17, col=c(1:4, 6))
legend('bottomleft', inset=0.01, legend = Players[1:3], pch=14:17, col=c(1:4, 6), horiz = F )
}
myplot()
myplot()
myplot = function(rows){                               # I create function myplot
data = MinutesPlayed[rows, , drop=FALSE]
matplot(t(data), type = 'b', pch = 14:17, col=c(1:4, 6))
legend('bottomleft', inset=0.01, legend = Players[rows], pch=14:17, col=c(1:4, 6), horiz = F )
}
myplot(3)
myplot(1)
myplot(5)
myplot(4:5)
myplot(41:5)
myplot(1:5)
myplot = function(rows, data){                               # I create function myplot
Data = data[rows, , drop=FALSE]
matplot(t(Data), type = 'b', pch = 14:17, col=c(1:4, 6))
legend('bottomleft', inset=0.01, legend = Players[rows], pch=14:17, col=c(1:4, 6), horiz = F )
}
myplot = function(rows, data){                               # I create function myplot
Data = data[rows, , drop=FALSE]
matplot(t(Data), type = 'b', pch = 14:17, col=c(1:4, 6))
legend('bottomleft', inset=0.01, legend = Players[rows], pch=14:17, col=c(1:4, 6), horiz = F )
}
myplot(1:5, Games)
myplot(1:2, gpg)
myplot(1:4, gpg)
myplot = function(rows=1:10, data){                               # I create function myplot
Data = data[rows, , drop=FALSE]
matplot(t(Data), type = 'b', pch = 14:17, col=c(1:4, 6))
legend('bottomleft', inset=0.01, legend = Players[rows], pch=14:17, col=c(1:4, 6), horiz = F )
}
myplot(1:4, gpg)
myplot(1:4, gpg)
myplot( gpg)
myplot( ,gpg)
myplot(2 ,gpg)
myplot = function(data, rows=1:10){                               # I create function myplot
Data = data[rows, , drop=FALSE]
matplot(t(Data), type = 'b', pch = 14:17, col=c(1:4, 6))
legend('bottomleft', inset=0.01, legend = Players[rows], pch=14:17, col=c(1:4, 6), horiz = F )
}
myplot(gpg)
myplot(Salary)
windows()
myplot(Salary)
myplot(Salary/Games)
r = rcauchy(500)
hist(r)
r = rcauchy(5000)
hist(r)
r = rcauchy(500)
f = function(y){-sum(log(1+(x-y)^2))}
f = function(y){-sum(log(1+(x-y)^2))}
for (i in 1:500){
x=r[1:i]
mi=optimise(f,interval=c(-10,10),max=T)$max}
for (i in 1:500){
x=r[1:i]
mi=optimise(f,interval=c(-10,10))$max}
mi
for (i in 1:500){
x=r[1:i]
mi=optimise(f,interval=c(-10,10), max=T)$max}
?optimise
for (i in 1:500){
x=r[1:i]
mi=optimise(f,interval=c(-10,10), upper = max(T)$max}
for (i in 1:500){
x=r[1:i]
mi=optimise(f,interval=c(-10,10), upper = max(T))
mi
for (i in 1:500){
x=r[1:i]
mi=optimise(f,interval=c(-10,10), upper = max(T))
}
for (i in 1:500){
x=r[1:i]
mi=optimise(f,interval=c(-10,10), upper = max(T))
}
mi
for (i in 1:500){
x=r[1:i]
mi=optimise(f,interval=c(-2,10), upper = max(T))
}
for (i in 1:500){
x=r[1:i]
mi=optimise(f,interval=c(-2,10))
}
for (i in 1:500){
x=xm[1:i]
mi=optimise(f,interval=c(-10,10),max=T)$max}
}
xm=rcauchy(500)
f=function(y){-sum(log(1+(x-y)^2))}
for (i in 1:500){
x=xm[1:i]
mi=optimise(f,interval=c(-10,10),max=T)$max}
mi
for (i in 1:500){
x=xm[1:i]
mi=optimise(f,interval=c(-10,10))$max}
mi
for (i in 1:500){
x=xm[1:i]
mi=optimise(f,interval=c(-10,10), max=T)$max}
mi
xm=rcauchy(500)
f=function(y){-sum(log(1+(x-y)^2))}
for (i in 1:500){
x=xm[1:i]
mi=optimise(f,interval=c(-10,10), max=T)$max}
mi
numeric(10)
numeric(12)
reticulate::repl_python()
import numpy
reticulate::repl_python()
import numpy
yes
import numpy
y
SELECT 1
create database mj;
y
SELECT 1
create database mj;
numeric(12)
r', 'mt')
price = c(100, 30, 60, 110, 90
v1 = c( 'car', 'mt', 'mt', 'car', 'mt')
price = c(100, 30, 60, 110, 90)
v1 = c( 'car', 'mt', 'mt', 'car', 'mt')
df = data.frame(v1, price)
df[v1=='mt', ]
df[v1=='mt' ]
mtdf = df$v1 == 'mt'
df[mtdf, ]
install.packages(kfilter)
install.packages(sspir)
install.packages(KalmanLike)
install.packages('KalmanLike')
library(KalmanLike)
install.packages(dse1)
install.packages("KalmanLike")
x = rnorm(1000)
m1 = arima(x, c(1,0,1))
m1 = arima(x, c(1,0,0))
summary(m1)
m1
m2 = garch(x, order=c(1,1))
install.packages("fGarch")
library(fGarch)
m2 = garch(x, order=c(1,1))
install.packages(fSeries)
install.packages(TimeSeries)
install.packages(timeSeries)
install.packages('timeSeries')
install.packages("timeSeries")
library(timeSeries)
m2 = garch(x, order=c(1,1))
library(fGarch)
detach("package:fBasics", unload = TRUE)
m2 = garch(x, order=c(1,1))
m2 = garchfit(x, order=c(1,1))
m2 = garchFit(x, order=c(1,1))
garchFit(~ garch(1,1), data = x, trace = FALSE)
basicStats(x)
setwd("D:/Git projects/R course")
#install.packages("installr")   # Library
library (installr)
df = read.csv('movierating.csv')
df = read.csv('movierating.csv')
colnames(df)[2] = 'genre'
colnames(df)[3] = 'rotten tomatoes'
colnames(df)[4] = 'audience rating'
colnames(df)[5] =  'budget'
colnames(df)[6] =  'year'
attach(df)
library(fBasics)
basicStats(df$`rotten tomatoes`)
library(ggplot2)
head(df)
ggplot(data = df, aes(x = `rotten tomatoes`, y= `audience rating`),
)
+ geom_point()
ggplot(data = df, aes(x = `rotten tomatoes`, y= `audience rating`))
+ geom_point()
ggplot(data = df, aes(x = `rotten tomatoes`, y= `audience rating`)) + geom_point()
ggplot(data = df, aes(x = `rotten tomatoes`, y= `audience rating`, colour=genre)) + geom_point()
ggplot(data = df, aes(x = `rotten tomatoes`, y= `audience rating`, colour=genre, size=budget)) + geom_point()
ggplot(data = df, aes(x = `rotten tomatoes`, y= `audience rating`,
colour=genre, size=budget, al)) + geom_point()
ggplot(data = df, aes(x = `rotten tomatoes`, y= `audience rating`,
colour=genre, size=budget,
alpha=0.5)) + geom_point()
windows()
ggplot(data = df, aes(x = `rotten tomatoes`, y= `audience rating`,
colour=genre, size=budget,
alpha=0.5)) + geom_point()
p = ggplot(data = df, aes(x = `rotten tomatoes`, y= `audience rating`,
colour=genre, size=budget,
alpha=0.5)) + geom_point()
p = ggplot(data = df, aes(x = `rotten tomatoes`, y= `audience rating`,
colour=genre, size=budget,
alpha=0.5))
p + + geom_point()
p + geom_point()
p + geom_point()
p + geom_point()
p + geom_line()
p + geom_point() + GeomViolin
p + geom_point() + geom_smooth(method='lm', formula= audience rating~ rotten tomatoes)
p +  geom_smooth(method='lm', formula= audience rating~ rotten tomatoes)
p +  geom_smooth(method='lm', formula= 'audience rating'~ 'rotten tomatoes')
p +  geom_smooth(method='lm', formula= audience rating~ rotten tomatoes)
p +  geom_smooth(method='lm')
alpha=I(0.5))
alpha=0.5)
p = ggplot(data = df, aes(x = `rotten tomatoes`, y= `audience rating`,
colour=genre, size=budget,
alpha=0.5))
head(df)
ggplot(data = df, aes(x = rotten tomatoes, y = audience rating)) +
geom_point(color='blue') +
geom_smooth(method = "lm", se = FALSE)
ggplot(data = df, aes(x = rotten tomatoes, y = audience rating)) +
geom_point(color='blue') +
geom_smooth(method = "lm", se = FALSE)
ggplot(data = df, aes(x = `rotten tomatoes`, y= `audience rating`)) +
geom_point(color='blue') +
geom_smooth(method = "lm", se = FALSE)
ggplot(data = df, aes(x = `rotten tomatoes`, y= `audience rating`)) +
geom_point(color=genre) +
geom_smooth(method = "lm", se = FALSE)
ggplot(data = df, aes(x = `rotten tomatoes`, y= `audience rating`)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
ggplot(data = df, aes(x = `rotten tomatoes`, y= `audience rating`,
colour=genre,
size=budget,)) + geom_point() +
geom_smooth(method = "lm", se = FALSE)
ggplot(data = df, aes(x = `rotten tomatoes`, y= `audience rating`,
colour=genre,
size=budget)) + geom_point() +
geom_smooth(method = "lm", se = FALSE)
ggplot(data = df, aes(x = `rotten tomatoes`, y= `audience rating`,
colour=genre)) + geom_point() +
geom_smooth(method = "lm", se = FALSE)
ggplot(data = df, aes(x = `rotten tomatoes`, y= `audience rating`,
size=buget)) + geom_point() +
geom_smooth(method = "lm", se = FALSE)
ggplot(data = df, aes(x = `rotten tomatoes`, y= `audience rating`,
size=budget)) + geom_point() +
geom_smooth(method = "lm", se = FALSE)
ggplot(data = df, aes(x = `rotten tomatoes`, y= `audience rating`
)) + geom_point() +
geom_smooth(method = "lm", se = FALSE)
ggplot(data = df, aes(x = `rotten tomatoes`, y= `audience rating`
)) + geom_point(colour='blue') +
geom_smooth(method = "lm", se = FALSE)
q = ggplot(data = df, aes(x = `rotten tomatoes`, y= `audience rating`,
colour=genre, size=budget,
alpha=0.5))
q + geom_point()
head(df)
q + geom_point(aes(`audience rating`))
q + geom_point(aes(`size=audience rating`))
q + geom_point(aes(size=`audience rating`))
q = ggplot(data = df, aes(x = `rotten tomatoes`, y= `audience rating`,
colour=genre, size=budget
))
q + geom_point(aes(size=`audience rating`))
q + geom_point(aes(size=`audience rating`))
q + geom_point(aes(size=`audience rating`))
q + geom_point(aes(size=`audience rating`))
head(df)
head(df)
## subscripting graphs
windows()
q + geom_point(aes(size=`audience rating`))
q + geom_point(aes(colour=`budget`))
q + geom_point(aes(x=budget))
q + geom_point(aes(x=budget)) + xlab('budget')
q + geom_line(size=1) + geom_point()
## subscripting graphs
windows()
q + geom_line(size=1) + geom_point()
r = ggplot(data = df, aes(x=`rotten tomatoes`, y= `audience rating`))
r + geom_point()
r + geom_point(colour=genre)
r + geom_point(aes(colour=genre)
r + geom_point(aes(colour=genre))
r + geom_point(aes(colour=genre))
## setting
r + geom_point(colour='blue')
## setting
r + geom_point(colour='blue', size=5)
## setting
r + geom_point(colour='blue', size=1)
## setting
r + geom_point(colour='blue', size=0)
## setting
r + geom_point(colour='blue', size=1)
r + geom_histogram()
t = ggplot(data = df, aes(x=`rotten tomatoes`))
t + geom_histogram()
t = ggplot(data = df, aes(x=`budget`))
t + geom_histogram()
t + geom_histogram(binwidth = 10)
t + geom_histogram(binwidth = 10, aes(fill=genre))
t + geom_histogram(binwidth = 10, aes(fill=genre), colour='black')
t + geom_density(aes(fill=genre))
t + geom_density(aes(fill=genre), position = 'stack')
