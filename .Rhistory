hist(rweibull(200, shape = 10, scale = 2))
hist(rweibull(200, shape = 10, scale = 2))
hist(rweibull(200, shape = 10, scale = 2))
hist(rweibull(200, shape = 10, scale = 2))
hist(rweibull(200, shape = 10, scale = 2))
hist(rweibull(200, shape = 10, scale = 2))
hist(rweibull(200, shape = 10, scale = 2))
hist(rweibull(200, shape = 10, scale = 2))
hist(rweibull(200, shape = 10, scale = 2))
hist(rweibull(200, shape = 10, scale = 2))
hist(rweibull(200, shape = 10, scale = 2))
hist(rweibull(200, shape = 10, scale = 2))
hist(rweibull(200, shape = 10, scale = 2))
hist(rweibull(200, shape = 10, scale = 2))
hist(rweibull(200, shape = 10, scale = 2))
hist(rweibull(200, shape = -10, scale = 2))
hist(rweibull(200, shape = 1, scale = 2))
hist(rweibull(200, shape = 1, scale = 20))
hist(rweibull(200, shape = 1, scale = 20))
hist(rweibull(200, shape = 1, scale = 20))
hist(rweibull(200, shape = 1, scale = 20))
hist(rweibull(200, shape = 1, scale = 20))
hist(rweibull(200, shape = 1, scale = 20))
hist(rweibull(200, shape = 1, scale = 20))
hist(rweibull(200, shape = 1, scale = 20))
hist(rweibull(200, shape = 1, scale = 20))
hist(rweibull(200, shape = 1, scale = 20))
hist(rweibull(200, shape = 1, scale = 2))
hist(rweibull(200, shape = 1, scale = 2))
y = c(3.5, 1, 1.5)
theta = 1
tol = 1e-5
g = -1/theta + sum(y)/(length(y)*theta^2)
h = 1/theta^2 - (2*sum(y))/(length(y)* theta^3)
l = -log(theta) - sum(y)/(theta*length(y))
while (g>tol) {
g = -1/theta + sum(y)/(length(y)*theta^2)
h = 1/theta^2 - (2*sum(y))/(length(y)* theta^3)
theta = theta - 0.6*g/h
l = -log(theta) - sum(y)/(theta*length(y))
cat("\033[0;44m")
cat('theta=', theta, '\n')
cat('Likelihood =', l, '\n')
}
f = 1/theta * exp(-y/theta)
1258/89
14.13+77
y = c(3.5, 1, 1.5)
theta = 1
tol = 1e-5
g = -1/theta + sum(y)/(length(y)*theta^2)
h = 1/theta^2 - (2*sum(y))/(length(y)* theta^3)
l = -log(theta) - sum(y)/(theta*length(y))
while (g>tol) {
g = -1/theta + sum(y)/(length(y)*theta^2)
h = 1/theta^2 - (2*sum(y))/(length(y)* theta^3)
theta = theta - 0.6*g/h
l = -log(theta) - sum(y)/(theta*length(y))
cat("\033[0;44m")
cat('theta=', theta, '\n')
cat('Likelihood =', l, '\n')
}
f = 1/theta * exp(-y/theta)
hist(y)
plot(y, f, type = 'p')
y = c(3.5, 1, 1.5)
theta = 1
tol = 1e-6
g = -1/theta + sum(y)/(length(y)*theta^2)
h = 1/theta^2 - (2*sum(y))/(length(y)* theta^3)
l = -log(theta) - sum(y)/(theta*length(y))
while (g>tol) {
g = -1/theta + sum(y)/(length(y)*theta^2)
h = 1/theta^2 - (2*sum(y))/(length(y)* theta^3)
theta = theta - 0.6*g/h
l = -log(theta) - sum(y)/(theta*length(y))
cat("\033[0;44m")
cat('theta=', theta, '\n')
cat('Likelihood =', l, '\n')
}
f = 1/theta * exp(-y/theta)
hist(y)
plot(y, f, type = 'p')
y = c(3.5, 1, 1.5)
theta = 1
tol = 1e-6
g = -1/theta + sum(y)/(length(y)*theta^2)
h = 1/theta^2 - (2*sum(y))/(length(y)* theta^3)
l = -log(theta) - sum(y)/(theta*length(y))
while (g>tol) {
g = -1/theta + sum(y)/(length(y)*theta^2)
h = 1/theta^2 - (2*sum(y))/(length(y)* theta^3)
theta = theta - 0.6*g/h
l = -log(theta) - sum(y)/(theta*length(y))
cat("\033[0;44m")
cat('theta=', theta, '\n')
cat('Likelihood =', l, '\n')
}
f = 1/theta * exp(-y/theta)
hist(y)
plot(y, f, type = 'p')
10/110
110*0.3
110*(0.5-0.091)
45/150
0.15*(1200*(0.75-6))
(1200*(0.75))
(1200*(6))
0.15*900
0.15*7200
18-135
117/1080
1/0.15
setwd("D:/Git projects/R course")
library(magrittr)
library(moments)
mom = function(z){
skewness = z %>% skewness
kurtosis = z %>% kurtosis
mean = z %>% mean
sd = z %>% sd
res = data.frame(skewness, kurtosis, mean, sd)
return(res)
}
x = rnorm(100)
x %>% sum %>% sqrt
library(sn)
e_s = c()
for (i in 1:1000) {
x = rsn(10000, alpha = 0.5)
var = x %>% quantile(0.05)
es = x[x<var] %>% mean
e_s[i] = es
}
e_s %>% hist(col='lightgreen')
x %>% mom
x %>% round
x %>% round(4)
moments = x %>% mom
moments %>% round(4)
x %>% mom
moments %>% round(5)
moments = moments %>% round(5)
knitr::kable(moments)
knitr::moments %>% kable
knitr::kable(moments)
cat(\033[1;033m)
cat('\033[1;033m')
cat('\033[1;033m oi')
cat('\033[1;034m oi')
cat('\033[1;034m')
knitr:: kable(moments)
cat('\033[2;034m')
cat('\033[2;034moi')
cat('\033[3;034moi')
cat('\033[4;034moi')
cat('\033[5;034moi')
cat('\033[0;034moi')
cat('\033[1;034moi')
cat('\033[1;035moi')
cat('\033[1;036moi')
cat('\033[1;037moi')
cat('\033[1;038moi')
cat('\033[1;038moi')
cat('\033[1;039moi')
cat('\033[1;040moi')
cat('\033[1;030moi')
cat('\033[1;031moi')
cat('\033[1;031moi')
knitr:: kable(moments)
cat('\033[1;031mknitr:: kable(moments)')
cat('\033[1;031mknitr::', kable(moments))
cat('\033[1;031mknitr::', knitr:: kable(moments))
cat('\033[1;031mknitr::', knitr:: kable(moments))
cat('\033[1;031mknitr::', knitr::kable(moments))
cat('\033[1;031mknitr::')
knitr:: kable(moments)
library(fitdist)
library(fitdistr)
library('fitdistr')
install.packages('fitdistr')
library('fitdistr')
library(fitdistrplus)
x %>% fitdist('norm')
fitdist(x, 'norm')
fitdist(as.vector(x), 'norm')
as.vector(x) %>% fitdist('norm')
fit <- as.vector(x) %>% fitdist('norm')
moments
fit
fit <- round(fit, 4)
round(fit, 4)
View(fit)
plotdist(as.vector(x), histo = T, demp = T)
descdist(as.vector(x), histo = T, demp = T)
descdist(as.vector(x))
as.vector(x) %>% descdist
as.vector(x) %>% descdist(boot = 1000)
fit %>% summary
fit %>% plot
library(quantmod)
ibov = getSymbols('^BVSP', src='yahoo',
from= '1995-01-01',
periodicity = "monthly",    # IBOV mensal
auto.assign = F)[,4]
ret = log(diff(ibov))
library(fGarch)
basicStats(ret)
ret = diff(log(ibov))
ret %>% basicStats
descdist(ret)
ret %>% as.vector %>% descdist
descdist(as.vector(x))
descdist(as.vector(ret))
View(ret)
ret %>% na.ommit
ret %>% na.omit
ret = ret %>% na.omit
descdist(as.vector(ret))
fit$bic
distb = c('norm', 'sn', 't')
for (i in distb) {
fit <- as.vector(ret) %>% fitdist(i)
binf = fit$bic
cat(i, binf )
}
library(sn)
for (i in distb) {
fit <- as.vector(ret) %>% fitdist(i)
binf = fit$bic
cat(i, binf )
}
distb = c('norm',  't')
for (i in distb) {
fit <- as.vector(ret) %>% fitdist(i)
binf = fit$bic
cat(i, binf )
}
as.vector(ret) %>% fitdist('norm')
as.vector(ret) %>% fitdist('t')
as.vector(ret) %>% fitdist('weibull')
as.vector(ret) %>% fitdist('gamma')
as.vector(ret) %>% fitdist('st')
as.vector(ret) %>% fitdist('exponential')
as.vector(ret) %>% fitdist('t')
as.vector(ret) %>% fitdist('sn')
as.vector(ret) %>% fitdistr('sn')
as.vector(ret) %>% fitdistr('t')
as.vector(ret) %>% fitdistr('weibull')
as.vector(ret) %>% fitdistr('gamma')
as.vector(ret) %>% fitdistr('normal')
as.vector(ret) %>% fitdistr
library(propagate)
install.packages('propagate')
library(propagate)
as.vector(ret) %>% fitDistr
fit <- as.vector(ret) %>% fitDistr
fit %>% summary
View(fit)
fit[["stat"]][["BIC"]]
fit[["stat"]][["Distribution"]]
data.frame(fit$stat$Distribution, fit$stat$BIC)
df = data.frame(fit$stat$Distribution, fit$stat$BIC)
df
which.min(df)
which.min(df$fit.stat.BIC)
which.min(df$fit.stat.BIC, df$fit.stat.Distribution)
which.min(df$fit.stat.Distribution)
which.min(df$fit.stat.BIC)
df[which.min(df$fit.stat.BIC)]
df[which.min(df$fit.stat.BIC),]
View(fit)
fit[["par"]]
fit$par$Logistic
fit <- as.vector(ret) %>% fitdist('logistic')
fit <- as.vector(ret) %>% fitdist('llogis')
fit <- as.vector(ret) %>% fitdist('logistic')
fit <- as.vector(ret) %>% fitdist('llogis')
fit <- abs(as.vector(ret)) %>% fitdist('llogis')
fitdist(ret, 'llogis')
fit <- as.vector(ret) %>% MASS :: fitdist(ret, 'llogis')
library(MASS)
fit <- as.vector(ret) %>% MASS :: fitdist(ret, 'llogis')
fit <- as.vector(ret) %>% fitdistrplus :: fitdist(ret, 'llogis')
fit <- as.vector(ret) %>% fitdistrplus :: fitdist(ret, 'llogis', method = 'mle')
fit = as.vector(ret) %>% fitdistrplus :: fitdist(ret, 'llogis', method = 'mle')
fit = as.vector(ret) %>% fitdistrplus :: fitdist(ret, 'llogis')
fitdistrplus :: fitdist(ret, 'llogis')
fit = as.vector(ret) %>% fitdistrplus :: fitdistplus(ret, 'llogis')
fit = as.vector(ret) %>% fitdistrplus :: fitdistr(ret, 'llogis')
fitdistr(ret, 'llogis')
fitdistr(ret, 'logistic')
fit$par$Logistic               # parameters
fit = as.vector(ret) %>% fitdistrplus :: fitdistr(ret, 'llogis')
fitdistr(ret, 'llogis')
fit$par$Logistic               # parameters
fitdistr(abs(ret), 'llogis')
fitdistr(abs(ret), 'logistic')
fitdistr(ret, 'logistic')
?Distributions
fitdistr(ret, 'logis')
ks.test(as.vector(ret), 'pgamma', 3, 2)
ks.test(as.vector(ret), 'psn', 3, 2)
ks.test(as.vector(ret), 'plogis')
ks.test(as.vector(x), 'norm')
ks.test(as.vector(x), 'normal')
ks.test(x, 'norm')
ks.test(x, 'logis')
ks.test(x, 'plogis')
ks.test(x, 'pnorm')
ks.test(x, 'pnorm', alternative = 'two-sided')
ks.test(x, 'pnorm', alternative = 'less')
ks.test(x, 'dnorm')
ks.test(x, 'qnorm')
ks.test(x, 'dnorm')
ks.test(x, 'dnormal')
ks.test(x, 'dnorm')
ks.test(x, 'pnorm')
ks.test(x, 'pnorm', 0,1)
plot(ecdf(x))
y = rnorm(100000, 0, 1)
ks.test(y, 'pnorm', 0,1)
y = rnorm(100000, 0, 1)
ks.test(y, 'pnorm', 0,1)
ks.test(y, 'dnorm', 0,1)
ks.test(y, 'pnorm', 0,1)
ks.test(y, 'pnorm', 0,1)
ks.test(y, 'pnorm', 0,1)
ks.test(y, 'pnorm', 0,1)
ks.test(y, 'pnorm', 0,1)
ks.test(ret, 'pnorm', 0,1)
ks.test(x, 'pnorm', 0,1)
as.vector(x) %>% fitDistr
mean(x)
sd(x)
plot(ecdf(ret))
plot(cdf(ret))
View(fit)
fit[["fitted"]]
fit$par$Logistic               # parameters
fit$par$Logistic
fit$par$Logistic[1]
loc = fit$par$Logistic[1]
sc = fit$par$Logistic[2]
log = function(x){
l = (exp(-(x-loc)/sc))/sc(1 + exp(-(x-loc)/sc))^2
return(l)
}
lg = function(x){
l = (exp(-(x-loc)/sc))/sc(1 + exp(-(x-loc)/sc))^2
return(l)
}
plot(lg(ret), ret )
loc = fit$par$Logistic[1]
sc = fit$par$Logistic[2]
lg = function(x){
l = (exp(-(x-loc)/sc))/sc(1 + exp(-(x-loc)/sc))^2
return(l)
}
plot(lg(ret), ret )
lg = function(x){
l = (exp(-(x-loc)/sc))/sc*(1 + exp(-(x-loc)/sc))^2
return(l)
}
plot(lg(ret), ret )
ret = as.vector(ret)
lg = function(x){
l = (exp(-(x-loc)/sc))/sc*(1 + exp(-(x-loc)/sc))^2
return(l)
}
plot(lg(ret), ret )
lg(ret)
lg = function(x){
l = (exp(-(x-loc)/sc))/(sc*(1 + exp(-(x-loc)/sc))^2)
return(l)
}
plot(lg(ret), ret )
plot(ret, lg(ret))
plot(ret, ret %>% lg)
ks.test(ret, 'logis')
ks.test(ret, 'logistic')
ks.test(ret, 'plogistic')
ks.test(ret, 'plogis')
ret = ibov %>% log %>% diff
ret = ibov %>% log %>% diff
ret = ibov %>% log %>% diff
rm(log)
ret = ibov %>% log %>% diff
ret %>% basicStats
ret %>% descdist
ret = ret %>% as.vector
descdist(as.vector(ret))
ret = ret %>% na.omit
descdist(as.vector(ret))
ret %>% descdist
ret %>% descdist
descdist(as.vector(ret))
ret %>% as.vector %>% descdist
ret %>% hist
ret %>% hist %>% bins=35
ret %>% hist
ret %>% hist(bins=35)
ret %>% hist(breaks=35)
ret %>% hist(breaks=35)
ret %>% hist %>% (breaks=35)
ret %>% hist %>% breaks=35
ret %>% hist(breaks=35)
ret %>% hist(breaks=35, col = 'lightgreen')
ret %>% hist(breaks=35, col = 'lightblue')
ret %>% hist(breaks=35, col = 'lightblue', probability = T)
plot(ret, ret %>% lg)
lg(0)
lg(1)
loc
ret %>% lg
lg(1)
loc
loc = fit$par$Logistic[,1]
loc = fit$par$Logistic[1,]
loc = fit$par$Logistic[1]
lg(0)
dlogis(0, loc, sc)
dlogis(0, loc, sc, log = T)
dnorm(0)
dnorm(10)
lg(0)
dlogis(0, loc, sc)
lg(0)/10
lg(-0.1)/10
w = seq(-1, 0.2)
w = seq(-1, 0.2, 0.01)
cumul = function(z){
w = seq(-1, z, 0.01)
c = 0
for(i in w){
c = c + lg(i)/10
}
}
cumul(-0.2)
cumul = function(z){
w = seq(-1, z, 0.01)
c = 0
for(i in w){
c = c + lg(i)/10
return(c)
}
}
cumul(-0.2)
cumul(0)
cumul(0.2)
lg(w)
cumul = function(z){
w = seq(-1, z, 0.01)
c = 0
for(i in w){
print(i)
c = c + lg(i)/10
return(c)
}
}
cumul(0.2)
w = seq(-1, z, 0.01)
c = 0
for(i in w){
print(i)}
cumul = function(z){
w = seq(-1, z, 0.01)
c = 0
for(i in w){
c = c + lg(i)/10
return(c)
}
}
cumul(0.2)
cumul = function(z){
w = seq(-1, z, 0.01)
c = 0
for(i in w){
c = c + lg(i)/10
}
return(c)
}
cumul(0.2)
cumul(0)
cumul = function(z){
w = seq(-1, z, 0.01)
c = 0
for(i in w){
c = c + lg(i)/100
}
return(c)
}
cumul(0)
cumul(0.2)
cumul(1)
cumul(10)
cumul(0.2)
cumul = function(k, z){
w = seq(k, z, 0.01)
c = 0
for(i in w){
c = c + lg(i)/100
}
return(c)
}
cumul(0, 0.05)
cumul(-0.05, 0)
c(-0.05, 0) %>% cumul
cumul(-0.05, 0)
cumul(-0.1, 0)
cumul(-0, 0.1)
cumul(-1,1)
