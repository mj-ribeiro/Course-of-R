round(FieldGoals/Games)
round(FieldGoals/Games, 1)
gpg = round(FieldGoals/Games, 1)   #goals per game
mean(gpg)
mean(gpg['KobeBryant', ])
std(gpg['KobeBryant', ])
sd(gpg['KobeBryant', ])
max(gpg['KobeBryant', ])
which(gpg %in% max(gpg['KobeBryant', ]))
max(gpg['KobeBryant', ])
# Statistics of KobeBryant
gpg
gpg['KobeBryant', 1]
colnames(gpg['KobeBryant', 1])
colnames(gpg)
colnames(gpg[1])
colnames(gpg[ ,1])
colnames(gpg[1])
colnames(gpg[1,1])
colnames(gpg)
r = colnames(gpg)
r[1]
# Statistics of KobeBryant
gpg
plot(MinutesPlayed['KobeBryant', ], Salary[['KobeBryant', ]] )
plot(MinutesPlayed['KobeBryant', ], Salary['KobeBryant', ] )
reg = lm.fit(MinutesPlayed['KobeBryant', ], Salary['KobeBryant', ] )
reg = lm(MinutesPlayed['KobeBryant', ]~ Salary['KobeBryant', ])
summary(reg)
reg = lm(Salary['KobeBryant', ] ~ MinutesPlayed['KobeBryant', ])
summary(reg)
plot(Salary['KobeBryant', ] ~ MinutesPlayed['KobeBryant', ])
reg2 = lm(Salary['KobeBryant', ] ~ Points['KobeBryant', ])
summary(reg2)
matplot(t(FieldGoals))
matplot(t(FieldGoals), type = 'b')
matplot(t(FieldGoals), type = 'b', pch = 15:18)
matplot(t(FieldGoals), type = 'b', pch = 15:18, col=c(1:4, 6))
c(1:4, 6)
windows()
matplot(t(FieldGoals), type = 'b', pch = 15:18, col=c(1:4, 6))
windows()
matplot(t(FieldGoals), type = 'b', pch = 15:18, col=c(1:4, 6))
legend('bottomleft', inset=0.01, legend = Players,col=c(1:4, 6), horiz = F )
windows()
matplot(t(FieldGoals), type = 'b', pch = 14:17, col=c(1:4, 6))
legend('bottomleft', inset=0.01, legend = Players, pch=14:17, col=c(1:4, 6), horiz = F )
windows()
matplot(t(FieldGoals/Salary), type = 'b', pch = 14:17, col=c(1:4, 6))
legend('bottomleft', inset=0.01, legend = Players, pch=14:17, col=c(1:4, 6), horiz = F )
x = c(1, 44, 6, 33, 0, 1)
x[c(1:3)]
x[c(1,3)]
Games
Games[1:3, 1:6]
Games[c(5, 10), c(9, 10)]
Games[ , c('2008', '2011')]
Games[ c('KobeBryant ', 'ChrisBosh ') , c('2008', '2011')]
Games[ c('KobeBryant', 'ChrisBosh') , c('2008', '2011')]
Games[1, 1:6]
Games[1, 1:6, drop=FALSE]
## Graphs
data = MinutesPlayed[c(1:3), ]
matplot(t(data), type = 'b', pch = 14:17, col=c(1:4, 6))
legend('bottomleft', inset=0.01, legend = Players, pch=14:17, col=c(1:4, 6), horiz = F )
data
matplot(t(data), type = 'b', pch = 14:17, col=c(1:4, 6))
legend('bottomleft', inset=0.01, legend = Players, pch=14:17, col=c(1:4, 6), horiz = F )
matplot(t(data), type = 'b', pch = 14:17, col=c(1:4, 6))
legend('bottomleft', inset=0.01, legend = Players[1:3], pch=14:17, col=c(1:4, 6), horiz = F )
myplot = function(){
data = MinutesPlayed[c(1:3), ]
matplot(t(data), type = 'b', pch = 14:17, col=c(1:4, 6))
legend('bottomleft', inset=0.01, legend = Players[1:3], pch=14:17, col=c(1:4, 6), horiz = F )
}
myplot()
myplot()
myplot = function(rows){                               # I create function myplot
data = MinutesPlayed[rows, , drop=FALSE]
matplot(t(data), type = 'b', pch = 14:17, col=c(1:4, 6))
legend('bottomleft', inset=0.01, legend = Players[rows], pch=14:17, col=c(1:4, 6), horiz = F )
}
myplot(3)
myplot(1)
myplot(5)
myplot(4:5)
myplot(41:5)
myplot(1:5)
myplot = function(rows, data){                               # I create function myplot
Data = data[rows, , drop=FALSE]
matplot(t(Data), type = 'b', pch = 14:17, col=c(1:4, 6))
legend('bottomleft', inset=0.01, legend = Players[rows], pch=14:17, col=c(1:4, 6), horiz = F )
}
myplot = function(rows, data){                               # I create function myplot
Data = data[rows, , drop=FALSE]
matplot(t(Data), type = 'b', pch = 14:17, col=c(1:4, 6))
legend('bottomleft', inset=0.01, legend = Players[rows], pch=14:17, col=c(1:4, 6), horiz = F )
}
myplot(1:5, Games)
myplot(1:2, gpg)
myplot(1:4, gpg)
myplot = function(rows=1:10, data){                               # I create function myplot
Data = data[rows, , drop=FALSE]
matplot(t(Data), type = 'b', pch = 14:17, col=c(1:4, 6))
legend('bottomleft', inset=0.01, legend = Players[rows], pch=14:17, col=c(1:4, 6), horiz = F )
}
myplot(1:4, gpg)
myplot(1:4, gpg)
myplot( gpg)
myplot( ,gpg)
myplot(2 ,gpg)
myplot = function(data, rows=1:10){                               # I create function myplot
Data = data[rows, , drop=FALSE]
matplot(t(Data), type = 'b', pch = 14:17, col=c(1:4, 6))
legend('bottomleft', inset=0.01, legend = Players[rows], pch=14:17, col=c(1:4, 6), horiz = F )
}
myplot(gpg)
myplot(Salary)
windows()
myplot(Salary)
myplot(Salary/Games)
r = rcauchy(500)
hist(r)
r = rcauchy(5000)
hist(r)
r = rcauchy(500)
f = function(y){-sum(log(1+(x-y)^2))}
f = function(y){-sum(log(1+(x-y)^2))}
for (i in 1:500){
x=r[1:i]
mi=optimise(f,interval=c(-10,10),max=T)$max}
for (i in 1:500){
x=r[1:i]
mi=optimise(f,interval=c(-10,10))$max}
mi
for (i in 1:500){
x=r[1:i]
mi=optimise(f,interval=c(-10,10), max=T)$max}
?optimise
for (i in 1:500){
x=r[1:i]
mi=optimise(f,interval=c(-10,10), upper = max(T)$max}
for (i in 1:500){
x=r[1:i]
mi=optimise(f,interval=c(-10,10), upper = max(T))
mi
for (i in 1:500){
x=r[1:i]
mi=optimise(f,interval=c(-10,10), upper = max(T))
}
for (i in 1:500){
x=r[1:i]
mi=optimise(f,interval=c(-10,10), upper = max(T))
}
mi
for (i in 1:500){
x=r[1:i]
mi=optimise(f,interval=c(-2,10), upper = max(T))
}
for (i in 1:500){
x=r[1:i]
mi=optimise(f,interval=c(-2,10))
}
for (i in 1:500){
x=xm[1:i]
mi=optimise(f,interval=c(-10,10),max=T)$max}
}
xm=rcauchy(500)
f=function(y){-sum(log(1+(x-y)^2))}
for (i in 1:500){
x=xm[1:i]
mi=optimise(f,interval=c(-10,10),max=T)$max}
mi
for (i in 1:500){
x=xm[1:i]
mi=optimise(f,interval=c(-10,10))$max}
mi
for (i in 1:500){
x=xm[1:i]
mi=optimise(f,interval=c(-10,10), max=T)$max}
mi
xm=rcauchy(500)
f=function(y){-sum(log(1+(x-y)^2))}
for (i in 1:500){
x=xm[1:i]
mi=optimise(f,interval=c(-10,10), max=T)$max}
mi
numeric(10)
numeric(12)
reticulate::repl_python()
import numpy
reticulate::repl_python()
import numpy
yes
import numpy
y
SELECT 1
create database mj;
y
SELECT 1
create database mj;
numeric(12)
r', 'mt')
price = c(100, 30, 60, 110, 90
v1 = c( 'car', 'mt', 'mt', 'car', 'mt')
price = c(100, 30, 60, 110, 90)
v1 = c( 'car', 'mt', 'mt', 'car', 'mt')
df = data.frame(v1, price)
df[v1=='mt', ]
df[v1=='mt' ]
mtdf = df$v1 == 'mt'
df[mtdf, ]
install.packages(kfilter)
install.packages(sspir)
install.packages(KalmanLike)
install.packages('KalmanLike')
library(KalmanLike)
install.packages(dse1)
install.packages("KalmanLike")
x = rnorm(1000)
m1 = arima(x, c(1,0,1))
m1 = arima(x, c(1,0,0))
summary(m1)
m1
m2 = garch(x, order=c(1,1))
install.packages("fGarch")
library(fGarch)
m2 = garch(x, order=c(1,1))
install.packages(fSeries)
install.packages(TimeSeries)
install.packages(timeSeries)
install.packages('timeSeries')
install.packages("timeSeries")
library(timeSeries)
m2 = garch(x, order=c(1,1))
library(fGarch)
detach("package:fBasics", unload = TRUE)
m2 = garch(x, order=c(1,1))
m2 = garchfit(x, order=c(1,1))
m2 = garchFit(x, order=c(1,1))
garchFit(~ garch(1,1), data = x, trace = FALSE)
basicStats(x)
df = read.stata()
library(haven)
estat <- read_dta("D:/DOUTORADO/Others/painel felicidade/Estatística.dta")
View(estat)
df <- read_dta("D:/DOUTORADO/Others/painel felicidade/Estatística.dta")
rm(estat)
rm(estat)
View(df)
head(df)
f1 = df[year==2015, ]
attach(df)
f1 = df[year==2015, ]
View(f1)
library(ggplot2)
g1 = ggplot(data = df, aes(x= cresppc, y=hc, size=lld))
g1+geom_point()
g1+geom_point(color='blue')
g1 = ggplot(data = f1, aes(x= cresppc, y=hc, size=lld), alpha(0.5))
g1+geom_point(color='blue')
g1 = ggplot(data = f1, aes(x= hc, y=cresppc, size=lld), alpha(0.5))
g1+geom_point(color='blue')
g1+geom_point(color='blue')+geom_smooth()
g1+geom_point(color='blue')+geom_smooth(method = 'lm')
g1 = ggplot(data = f1, aes(x= hc, y=cresppc, size=lld, color=rendacod), alpha(0.5))
g1+geom_point()+geom_smooth(method = 'lm')
g1+geom_point()
g1+geom_point()+facet_grid(rendacod)
g1 = ggplot(data = f1, aes(x= hc, y=cresppc, size=lld), alpha(0.5))
g1+geom_point()+facet_grid(rendacod)
g1+geom_point(size=3)+facet_grid(rendacod)
g1 = ggplot(data = f1, aes(x= hc, y=cresppc, colour=lld), alpha(0.5))
g1+geom_point()+facet_grid(rendacod)
g1 = ggplot(data = f1, aes(x= hc, y=cresppc, size=lld), alpha(0.5))
g1+geom_point()
g1 = ggplot(data = f1, aes(x= hc, y=cresppc, size=lld), alpha(0.8))
g1+geom_point()
g1 = ggplot(data = f1, aes(x= hc, y=cresppc, size=lld), alpha(0.8), colour='blue')
g1+geom_point()
g1+geom_point(colour='blue')
g1 = ggplot(data = f1, aes(x= hc, y=cresppc, size=lld), alpha(1))
g1+geom_point(colour='blue')
g1 = ggplot(data = f1, aes(x= hc, y=cresppc, size=lld), alpha(8))
g1+geom_point(colour='blue')
g1+geom_point(colour='blue')
g1 = ggplot(data = f1, aes(x= hc, y=cresppc, size=lld), alpha(8))
g1 = ggplot(data = f1, aes(x= hc, y=cresppc, size=lld alpha(8))
g1+geom_point(colour='blue')
g1+geom_point(colour='blue')
g1 = ggplot(data = f1, aes(x= hc, y=cresppc, size=lld alpha(8))
g1 = ggplot(data = f1, aes(x= hc, y=cresppc, size=lld, alpha(8))
g1+geom_point(colour='blue')
g1 = ggplot(data = f1, aes(x= hc, y=cresppc, size=lld, alpha(8)))
g1+geom_point(colour='blue')
g1 = ggplot(data = f1, aes(x= hc, y=cresppc, size=lld, alpha(0.8)))
g1+geom_point(colour='blue')
g1+geom_point(colour='blue')
g1 = ggplot(data = f1, aes(x= hc, y=cresppc, size=lld, alpha=0.8))
g1+geom_point(colour='blue')
g1 = ggplot(data = f1, aes(x= hc, y=cresppc, size=lld, alpha=0.5))
g1+geom_point(colour='blue')
g1 = ggplot(data = f1, aes(x= hc, y=cresppc, size=lld, alpha=I(0.5))
g1 = ggplot(data = f1, aes(x= hc, y=cresppc, size=lld, alpha=I(0.5)))
g1 = ggplot(data = f1, aes(x= hc, y=cresppc, size=lld, alpha=I(0.5)))
g1+geom_point(colour='blue')
g1+geom_point(colour='rendacod')
g1 = ggplot(data = f1, aes(x= hc, y=cresppc, size=lld, colour=rendacod, alpha=I(0.5)))
g1+geom_point()
g1+geom_point() + facet_grid(rendacod)
View(f1)
g1 = ggplot(data = f1, aes(x= hc, y=cresppc, colour=rendacod, alpha=I(0.5)))
g1+geom_point() + facet_grid(rendacod)
f1 = na.omit(f1)
g1 = ggplot(data = f1, aes(x= hc, y=cresppc, colour=rendacod, alpha=I(0.5)))
g1+geom_point() + facet_grid(rendacod)
summary(f1)
g1+geom_point() + facet_grid(rendacod)
View(g1)
g1+geom_point() + facet_grid(rendacod, scales = 'free')
g1+geom_point()
g1 = ggplot(data = f1, aes(x= hc, y=cresppc, colour=rendacod, size=lld, alpha=I(0.5)))
g1+geom_point()
f1 = df[year==2015, ]
g1 = ggplot(data = f1, aes(x= hc, y=cresppc, colour=rendacod, size=lld, alpha=I(0.5)))
g1+geom_point()
f1 = df[year==2010, ]
g1 = ggplot(data = f1, aes(x= hc, y=cresppc, colour=rendacod, size=lld, alpha=I(0.5)))
g1+geom_point()
g1 = ggplot(data = df, aes(x= hc, y=cresppc, colour=rendacod, size=lld, alpha=I(0.5)))
g1+geom_point()+facet_grid(year)
g1+geom_point()+facet_grid(year~.)
g1+geom_point()+facet_grid(~.year)
g1+geom_point()+facet_grid(.~year)
windows()
g1+geom_point()+facet_grid(.~year)
View(df)
f1 = df[year>2010, ]
g1 = ggplot(data = f1, aes(x= hc, y=cresppc, colour=rendacod, size=lld, alpha=I(0.5)))
windows()
g1+geom_point()+facet_grid(.~year)
g1+geom_point()+facet_grid(.~year)+scale_color_hue(l=40, c=35)
windows()
g1+geom_point()+facet_grid(.~year)+scale_color_hue(l=40, c=35)
g1+geom_point()+facet_grid(.~year)+scale_color_hue(l=40, c=5)
g1+geom_point()+facet_grid(.~year)+scale_color_hue(l=40, c=5.8)
g1+geom_point()+facet_grid(.~year)+scale_color_hue(l=40, c=50)
g1+geom_point()+facet_grid(.~year)+scale_color_gradient2(midpoint=mid, low="blue", mid="white",
high="red", space ="Lab" )
windows()
g1+geom_point()+facet_grid(.~year)
g1+geom_point()+facet_grid(.~year)+scale_color_gradientn(colours = rainbow(5))
g1 = ggplot(data = f1, aes(x= hc, y=cresppc,
colour=rendacod, size=lld,
alpha=I(0.5)))+geom_point()
g1+facet_grid(.~year)+scale_color_gradientn(colours = rainbow(4))
windows()
g1+facet_grid(.~year)+scale_color_gradientn(colours = rainbow(4))
g1+facet_grid(.~year)+scale_color_gradientn(colours = rainbow(4))
g1+facet_grid(.~year)+scale_color_gradientn(colours = rainbow(4))
g1+facet_grid(.~year)+scale_color_gradientn(colours = rainbow(4))
g1+facet_grid(.~year)+scale_color_gradientn(colours = rainbow(4))
g1+facet_grid(.~year)+scale_color_gradientn(colours = rainbow(4))
g1+facet_grid(.~year)+scale_color_gradientn(colours = rainbow(4))
g1+facet_grid(.~year)+
scale_color_gradientn(colours = rainbow(4))+
theme(axis.title.x= element_text(colour = 'black', size = 10) )
g1+facet_grid(.~year)+
scale_color_gradientn(colours = rainbow(4))+
theme(axis.title.x= element_text(colour = 'black', size = 10),
xlab('Capital Humano'))
g1+facet_grid(.~year)+
scale_color_gradientn(colours = rainbow(4))+
theme(axis.title.x= element_text(colour = 'black', size = 10),
xlab('Capital Humano'))
g1+facet_grid(.~year)+
scale_color_gradientn(colours = rainbow(4))+
theme(axis.title.x= element_text(colour = 'black', size = 10),
xlab('Capital Humano'))
g1+facet_grid(.~year)+
scale_color_gradientn(colours = rainbow(4))+
theme(axis.title.x= element_text(colour = 'black', size = 10),
)
theme(axis.title.x= element_text(colour = 'black', size = 10),
axis.title.y = element_text(colour = 'black', size =10) )
g1+facet_grid(.~year)+
scale_color_gradientn(colours = rainbow(4))+
xlab('Capital Humano')+
ylab('Crescimento do PIB per capita')
theme(axis.title.x= element_text(colour = 'black', size = 10),
axis.title.y = element_text(colour = 'black', size =10) )
g1+facet_grid(.~year)+
scale_color_gradientn(colours = rainbow(4))+
xlab('Capital Humano')+
ylab('Crescimento do PIB per capita')+
theme(axis.title.x= element_text(colour = 'black', size = 10),
axis.title.y = element_text(colour = 'black', size =10) )
g1+facet_grid(.~year)+
scale_color_gradientn(colours = rainbow(4))+
xlab('Capital Humano')+
ylab('Crescimento do PIB per capita')+
main('graph')+
theme(axis.title.x= element_text(colour = 'black', size = 10),
axis.title.y = element_text(colour = 'black', size =10) )
setwd("D:/Git projects/R course")
g2 = g1+facet_grid(.~year)+
scale_color_gradientn(colours = rainbow(4))+
xlab('Capital Humano')+
ylab('Crescimento do PIB per capita')+
theme(axis.title.x= element_text(colour = 'black', size = 10),
axis.title.y = element_text(colour = 'black', size =10) )
g2 + scale_fill_discrete(name= c('Cantril ladder', 'Renda dos países'))
g2 + scale_fill_discrete(name= 'Cantril ladder')
g1 = ggplot(data = f1, aes(x= hc, y=cresppc,
colour=rendacod, size=lld,
alpha=I(0.5), fill=group))+geom_point()
g2 = g1+facet_grid(.~year)+
scale_color_gradientn(colours = rainbow(4))+
xlab('Capital Humano')+
ylab('Crescimento do PIB per capita')+
theme(axis.title.x= element_text(colour = 'black', size = 10),
axis.title.y = element_text(colour = 'black', size =10) )
g2 + scale_fill_discrete(name= 'Cantril ladder', 'Renda dos países'))
g2
g1 = ggplot(data = f1, aes(x= hc, y=cresppc,
colour=rendacod, size=lld,
alpha=I(0.5)))+geom_point()
g2 = g1+facet_grid(.~year)+
scale_color_gradientn(colours = rainbow(4))+
xlab('Capital Humano')+
ylab('Crescimento do PIB per capita')+
theme(axis.title.x= element_text(colour = 'black', size = 10),
axis.title.y = element_text(colour = 'black', size =10) )
g2
g2 + scale_fill_discrete(name= 'Cantril ladder', 'Renda dos países'))
g2 = g1+facet_grid(.~year)+
scale_color_gradientn(colours = rainbow(4))+
labs('Cantril Ladder')
g2
g2 + scale_fill_discrete(name= 'Cantril ladder', 'Renda dos países'))
g2
g2 = g1+facet_grid(.~year)+
scale_color_gradientn(colours = rainbow(4))+
labs(color='cantril ladder')
g2
g2 = g1+facet_grid(.~year)+
scale_color_gradientn(colours = rainbow(4))+
labs(color='Classificação de \nrenda', size='Cantril Ladder')
xlab('Capital Humano')+
ylab('Crescimento do PIB per capita')+
theme(axis.title.x= element_text(colour = 'black', size = 10),
axis.title.y = element_text(colour = 'black', size =10) )
g2
g2 = g1+facet_grid(.~year)+
scale_color_gradientn(colours = rainbow(4))+
labs(color='Classificação \nde renda', size='Cantril \nLadder')
xlab('Capital Humano')+
ylab('Crescimento do PIB per capita')+
theme(axis.title.x= element_text(colour = 'black', size = 10),
axis.title.y = element_text(colour = 'black', size =10) )
g2
windows()
g2 = g1+facet_grid(.~year)+
scale_color_gradientn(colours = rainbow(4))+
labs(color='Classificação \nde renda', size='Cantril \nLadder')
xlab('Capital Humano')+
ylab('Crescimento do PIB per capita')+
theme(axis.title.x= element_text(colour = 'black', size = 10),
axis.title.y = element_text(colour = 'black', size =10) )
g2
windows()
g2
g2 = g1+facet_grid(.~year)+
scale_color_gradientn(colours = rainbow(4))+
labs(color='Classificação \nde renda', size='Cantril \nLadder')
xlab('Capital Humano')+
ylab('Crescimento do PIB per capita')+
theme(axis.title.x= element_text(colour = 'black', size = 10),
axis.title.y = element_text(colour = 'black', size =10) )
windows()
g2
g2 = g1+facet_grid(.~year)+
scale_color_gradientn(colours = rainbow(4))+
labs(color='Classificação \nde renda', size='Cantril \nLadder',
x='Capital Humano')
xlab('Capital Humano')+
ylab('Crescimento do PIB per capita')+
theme(axis.title.x= element_text(colour = 'black', size = 10),
axis.title.y = element_text(colour = 'black', size =10) )
g2 = g1+facet_grid(.~year)+
scale_color_gradientn(colours = rainbow(4))+
labs(color='Classificação \nde renda', size='Cantril \nLadder',
x='Capital Humano')+
theme(axis.title.x= element_text(colour = 'black', size = 10),
axis.title.y = element_text(colour = 'black', size =10) )
g2
g2 = g1+facet_grid(.~year)+
scale_color_gradientn(colours = rainbow(4))+
labs(color='Classificação \nde renda', size='Cantril \nLadder',
x='Capital Humano', y= 'Taxa de crescimento do PIB per capita')+
theme(axis.title.x= element_text(colour = 'black', size = 10),
axis.title.y = element_text(colour = 'black', size =10) )
windows()
g2
g2
g2
f1 = df[CountryCode=='BRA', ]
f1 = df[year>2010, ]
f2 = df[CountryCode=='BRA', ]
View(f2)
windows()
g2
