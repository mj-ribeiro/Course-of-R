CarmeloAnthony_FG <- c(756,691,728,535,688,684,441,669,743,358)
DwightHoward_FG <- c(468,526,583,560,510,619,416,470,473,251)
ChrisBosh_FG <- c(549,543,507,615,600,524,393,485,492,343)
ChrisPaul_FG <- c(407,381,630,631,314,430,425,412,406,568)
KevinDurant_FG <- c(306,306,587,661,794,711,643,731,849,238)
DerrickRose_FG <- c(208,208,208,574,672,711,302,0,58,338)
DwayneWade_FG <- c(699,472,439,854,719,692,416,569,415,509)
#Matrix
FieldGoals <- rbind(KobeBryant_FG, JoeJohnson_FG, LeBronJames_FG, CarmeloAnthony_FG, DwightHoward_FG, ChrisBosh_FG, ChrisPaul_FG, KevinDurant_FG, DerrickRose_FG, DwayneWade_FG)
rm(KobeBryant_FG, JoeJohnson_FG, LeBronJames_FG, CarmeloAnthony_FG, DwightHoward_FG, ChrisBosh_FG, ChrisPaul_FG, KevinDurant_FG, DerrickRose_FG, DwayneWade_FG)
colnames(FieldGoals) <- Seasons
rownames(FieldGoals) <- Players
#Field Goal Attempts
KobeBryant_FGA <- c(2173,1757,1690,1712,1569,1639,1336,1595,73,713)
JoeJohnson_FGA <- c(1395,1139,1497,1420,1386,1161,931,1052,1018,1025)
LeBronJames_FGA <- c(1823,1621,1642,1613,1528,1485,1169,1354,1353,1279)
CarmeloAnthony_FGA <- c(1572,1453,1481,1207,1502,1503,1025,1489,1643,806)
DwightHoward_FGA <- c(881,873,974,979,834,1044,726,813,800,423)
ChrisBosh_FGA <- c(1087,1094,1027,1263,1158,1056,807,907,953,745)
ChrisPaul_FGA <- c(947,871,1291,1255,637,928,890,856,870,1170)
KevinDurant_FGA <- c(647,647,1366,1390,1668,1538,1297,1433,1688,467)
DerrickRose_FGA <- c(436,436,436,1208,1373,1597,695,0,164,835)
DwayneWade_FGA <- c(1413,962,937,1739,1511,1384,837,1093,761,1084)
#Matrix
FieldGoalAttempts <- rbind(KobeBryant_FGA, JoeJohnson_FGA, LeBronJames_FGA, CarmeloAnthony_FGA, DwightHoward_FGA, ChrisBosh_FGA, ChrisPaul_FGA, KevinDurant_FGA, DerrickRose_FGA, DwayneWade_FGA)
rm(KobeBryant_FGA, JoeJohnson_FGA, LeBronJames_FGA, CarmeloAnthony_FGA, DwightHoward_FGA, ChrisBosh_FGA, ChrisPaul_FGA, KevinDurant_FGA, DerrickRose_FGA, DwayneWade_FGA)
colnames(FieldGoalAttempts) <- Seasons
rownames(FieldGoalAttempts) <- Players
#Points
KobeBryant_PTS <- c(2832,2430,2323,2201,1970,2078,1616,2133,83,782)
JoeJohnson_PTS <- c(1653,1426,1779,1688,1619,1312,1129,1170,1245,1154)
LeBronJames_PTS <- c(2478,2132,2250,2304,2258,2111,1683,2036,2089,1743)
CarmeloAnthony_PTS <- c(2122,1881,1978,1504,1943,1970,1245,1920,2112,966)
DwightHoward_PTS <- c(1292,1443,1695,1624,1503,1784,1113,1296,1297,646)
ChrisBosh_PTS <- c(1572,1561,1496,1746,1678,1438,1025,1232,1281,928)
ChrisPaul_PTS <- c(1258,1104,1684,1781,841,1268,1189,1186,1185,1564)
KevinDurant_PTS <- c(903,903,1624,1871,2472,2161,1850,2280,2593,686)
DerrickRose_PTS <- c(597,597,597,1361,1619,2026,852,0,159,904)
DwayneWade_PTS <- c(2040,1397,1254,2386,2045,1941,1082,1463,1028,1331)
#Matrix
Points <- rbind(KobeBryant_PTS, JoeJohnson_PTS, LeBronJames_PTS, CarmeloAnthony_PTS, DwightHoward_PTS, ChrisBosh_PTS, ChrisPaul_PTS, KevinDurant_PTS, DerrickRose_PTS, DwayneWade_PTS)
rm(KobeBryant_PTS, JoeJohnson_PTS, LeBronJames_PTS, CarmeloAnthony_PTS, DwightHoward_PTS, ChrisBosh_PTS, ChrisPaul_PTS, KevinDurant_PTS, DerrickRose_PTS, DwayneWade_PTS)
colnames(Points) <- Seasons
rownames(Points) <- Players
Salary
rownames(Salary)
colnames(Salary)
Salary['JoeJohnson', 2014]
Salary['JoeJohnson', '2014']
FieldGoals/Games
round(FieldGoals/Games)
round(FieldGoals/Games, 1)
gpg = round(FieldGoals/Games, 1)   #goals per game
mean(gpg)
mean(gpg['KobeBryant', ])
std(gpg['KobeBryant', ])
sd(gpg['KobeBryant', ])
max(gpg['KobeBryant', ])
which(gpg %in% max(gpg['KobeBryant', ]))
max(gpg['KobeBryant', ])
# Statistics of KobeBryant
gpg
gpg['KobeBryant', 1]
colnames(gpg['KobeBryant', 1])
colnames(gpg)
colnames(gpg[1])
colnames(gpg[ ,1])
colnames(gpg[1])
colnames(gpg[1,1])
colnames(gpg)
r = colnames(gpg)
r[1]
# Statistics of KobeBryant
gpg
plot(MinutesPlayed['KobeBryant', ], Salary[['KobeBryant', ]] )
plot(MinutesPlayed['KobeBryant', ], Salary['KobeBryant', ] )
reg = lm.fit(MinutesPlayed['KobeBryant', ], Salary['KobeBryant', ] )
reg = lm(MinutesPlayed['KobeBryant', ]~ Salary['KobeBryant', ])
summary(reg)
reg = lm(Salary['KobeBryant', ] ~ MinutesPlayed['KobeBryant', ])
summary(reg)
plot(Salary['KobeBryant', ] ~ MinutesPlayed['KobeBryant', ])
reg2 = lm(Salary['KobeBryant', ] ~ Points['KobeBryant', ])
summary(reg2)
matplot(t(FieldGoals))
matplot(t(FieldGoals), type = 'b')
matplot(t(FieldGoals), type = 'b', pch = 15:18)
matplot(t(FieldGoals), type = 'b', pch = 15:18, col=c(1:4, 6))
c(1:4, 6)
windows()
matplot(t(FieldGoals), type = 'b', pch = 15:18, col=c(1:4, 6))
windows()
matplot(t(FieldGoals), type = 'b', pch = 15:18, col=c(1:4, 6))
legend('bottomleft', inset=0.01, legend = Players,col=c(1:4, 6), horiz = F )
windows()
matplot(t(FieldGoals), type = 'b', pch = 14:17, col=c(1:4, 6))
legend('bottomleft', inset=0.01, legend = Players, pch=14:17, col=c(1:4, 6), horiz = F )
windows()
matplot(t(FieldGoals/Salary), type = 'b', pch = 14:17, col=c(1:4, 6))
legend('bottomleft', inset=0.01, legend = Players, pch=14:17, col=c(1:4, 6), horiz = F )
x = c(1, 44, 6, 33, 0, 1)
x[c(1:3)]
x[c(1,3)]
Games
Games[1:3, 1:6]
Games[c(5, 10), c(9, 10)]
Games[ , c('2008', '2011')]
Games[ c('KobeBryant ', 'ChrisBosh ') , c('2008', '2011')]
Games[ c('KobeBryant', 'ChrisBosh') , c('2008', '2011')]
Games[1, 1:6]
Games[1, 1:6, drop=FALSE]
## Graphs
data = MinutesPlayed[c(1:3), ]
matplot(t(data), type = 'b', pch = 14:17, col=c(1:4, 6))
legend('bottomleft', inset=0.01, legend = Players, pch=14:17, col=c(1:4, 6), horiz = F )
data
matplot(t(data), type = 'b', pch = 14:17, col=c(1:4, 6))
legend('bottomleft', inset=0.01, legend = Players, pch=14:17, col=c(1:4, 6), horiz = F )
matplot(t(data), type = 'b', pch = 14:17, col=c(1:4, 6))
legend('bottomleft', inset=0.01, legend = Players[1:3], pch=14:17, col=c(1:4, 6), horiz = F )
myplot = function(){
data = MinutesPlayed[c(1:3), ]
matplot(t(data), type = 'b', pch = 14:17, col=c(1:4, 6))
legend('bottomleft', inset=0.01, legend = Players[1:3], pch=14:17, col=c(1:4, 6), horiz = F )
}
myplot()
myplot()
myplot = function(rows){                               # I create function myplot
data = MinutesPlayed[rows, , drop=FALSE]
matplot(t(data), type = 'b', pch = 14:17, col=c(1:4, 6))
legend('bottomleft', inset=0.01, legend = Players[rows], pch=14:17, col=c(1:4, 6), horiz = F )
}
myplot(3)
myplot(1)
myplot(5)
myplot(4:5)
myplot(41:5)
myplot(1:5)
myplot = function(rows, data){                               # I create function myplot
Data = data[rows, , drop=FALSE]
matplot(t(Data), type = 'b', pch = 14:17, col=c(1:4, 6))
legend('bottomleft', inset=0.01, legend = Players[rows], pch=14:17, col=c(1:4, 6), horiz = F )
}
myplot = function(rows, data){                               # I create function myplot
Data = data[rows, , drop=FALSE]
matplot(t(Data), type = 'b', pch = 14:17, col=c(1:4, 6))
legend('bottomleft', inset=0.01, legend = Players[rows], pch=14:17, col=c(1:4, 6), horiz = F )
}
myplot(1:5, Games)
myplot(1:2, gpg)
myplot(1:4, gpg)
myplot = function(rows=1:10, data){                               # I create function myplot
Data = data[rows, , drop=FALSE]
matplot(t(Data), type = 'b', pch = 14:17, col=c(1:4, 6))
legend('bottomleft', inset=0.01, legend = Players[rows], pch=14:17, col=c(1:4, 6), horiz = F )
}
myplot(1:4, gpg)
myplot(1:4, gpg)
myplot( gpg)
myplot( ,gpg)
myplot(2 ,gpg)
myplot = function(data, rows=1:10){                               # I create function myplot
Data = data[rows, , drop=FALSE]
matplot(t(Data), type = 'b', pch = 14:17, col=c(1:4, 6))
legend('bottomleft', inset=0.01, legend = Players[rows], pch=14:17, col=c(1:4, 6), horiz = F )
}
myplot(gpg)
myplot(Salary)
windows()
myplot(Salary)
myplot(Salary/Games)
r = rcauchy(500)
hist(r)
r = rcauchy(5000)
hist(r)
r = rcauchy(500)
f = function(y){-sum(log(1+(x-y)^2))}
f = function(y){-sum(log(1+(x-y)^2))}
for (i in 1:500){
x=r[1:i]
mi=optimise(f,interval=c(-10,10),max=T)$max}
for (i in 1:500){
x=r[1:i]
mi=optimise(f,interval=c(-10,10))$max}
mi
for (i in 1:500){
x=r[1:i]
mi=optimise(f,interval=c(-10,10), max=T)$max}
?optimise
for (i in 1:500){
x=r[1:i]
mi=optimise(f,interval=c(-10,10), upper = max(T)$max}
for (i in 1:500){
x=r[1:i]
mi=optimise(f,interval=c(-10,10), upper = max(T))
mi
for (i in 1:500){
x=r[1:i]
mi=optimise(f,interval=c(-10,10), upper = max(T))
}
for (i in 1:500){
x=r[1:i]
mi=optimise(f,interval=c(-10,10), upper = max(T))
}
mi
for (i in 1:500){
x=r[1:i]
mi=optimise(f,interval=c(-2,10), upper = max(T))
}
for (i in 1:500){
x=r[1:i]
mi=optimise(f,interval=c(-2,10))
}
for (i in 1:500){
x=xm[1:i]
mi=optimise(f,interval=c(-10,10),max=T)$max}
}
xm=rcauchy(500)
f=function(y){-sum(log(1+(x-y)^2))}
for (i in 1:500){
x=xm[1:i]
mi=optimise(f,interval=c(-10,10),max=T)$max}
mi
for (i in 1:500){
x=xm[1:i]
mi=optimise(f,interval=c(-10,10))$max}
mi
for (i in 1:500){
x=xm[1:i]
mi=optimise(f,interval=c(-10,10), max=T)$max}
mi
xm=rcauchy(500)
f=function(y){-sum(log(1+(x-y)^2))}
for (i in 1:500){
x=xm[1:i]
mi=optimise(f,interval=c(-10,10), max=T)$max}
mi
numeric(10)
numeric(12)
reticulate::repl_python()
import numpy
reticulate::repl_python()
import numpy
yes
import numpy
y
SELECT 1
create database mj;
y
SELECT 1
create database mj;
numeric(12)
r', 'mt')
price = c(100, 30, 60, 110, 90
v1 = c( 'car', 'mt', 'mt', 'car', 'mt')
price = c(100, 30, 60, 110, 90)
v1 = c( 'car', 'mt', 'mt', 'car', 'mt')
df = data.frame(v1, price)
df[v1=='mt', ]
df[v1=='mt' ]
mtdf = df$v1 == 'mt'
df[mtdf, ]
install.packages(kfilter)
install.packages(sspir)
install.packages(KalmanLike)
install.packages('KalmanLike')
library(KalmanLike)
install.packages(dse1)
install.packages("KalmanLike")
x = rnorm(1000)
m1 = arima(x, c(1,0,1))
m1 = arima(x, c(1,0,0))
summary(m1)
m1
m2 = garch(x, order=c(1,1))
install.packages("fGarch")
library(fGarch)
m2 = garch(x, order=c(1,1))
install.packages(fSeries)
install.packages(TimeSeries)
install.packages(timeSeries)
install.packages('timeSeries')
install.packages("timeSeries")
library(timeSeries)
m2 = garch(x, order=c(1,1))
library(fGarch)
detach("package:fBasics", unload = TRUE)
m2 = garch(x, order=c(1,1))
m2 = garchfit(x, order=c(1,1))
m2 = garchFit(x, order=c(1,1))
garchFit(~ garch(1,1), data = x, trace = FALSE)
basicStats(x)
setwd("D:/Git projects/R course")
library(ggplot2)
df = read.csv('movierating.csv')
head(df)
colnames(df)[2] = 'genre'
colnames(df)[3] = 'rotten tomatoes'
colnames(df)[4] = 'audience rating'
colnames(df)[5] =  'budget'
colnames(df)[6] =  'year'
attach(df)
table(genre)
p = ggplot(data = df, aes(x = `rotten tomatoes`, y= `audience rating`,
colour=genre, size=budget,
alpha=0.5))
p + geom_point()
t = ggplot(data=df, aes(x=`audience rating`))
t + geom_histogram(binwidth = 10, fill=white)
t + geom_histogram(binwidth = 10, fill='white')
t + geom_histogram(binwidth = 10, fill='white', position = 'stack')
t + geom_histogram(binwidth = 10, fill='white', position = 'stack', colour='blue')
ggplot(data = df, aes(x=`rotten tomatoes`, y=`audience rating`, colour=genre))
u = ggplot(data = df, aes(x=`rotten tomatoes`, y=`audience rating`, colour=genre))
u + geom_point()
u + geom_point() + geom_smooth(fill=NA)
u + geom_point() + geom_smooth(fill=NA, method = 'LM')
u + geom_point() + geom_smooth(fill=NA, method = 'lm')
u + geom_point() + geom_smooth(fill=NA, method = 'lm', position = 'stack')
u + geom_point() + geom_smooth(fill=NA, method = 'lm')
u + geom_boxplot()
u + geom_boxplot(size=1.2)
f1 = factor(df$audience rating)
f1 = factor(audience rating)
f1 = factor('audience rating')
by(audience rating,f1, summary )
f1
f1 = factor(genre)
by(audience rating,f1, summary )
by('audience rating',f1, summary )
by(df$audience rating,f1, summary )
colnames(df)[3] = 'audrat'
colnames(df)[3] = 'rottom'
colnames(df)[4] = 'audirat'
f1 = factor(genre)
by(df$audirat,f1, summary )
by(df$rottom,f1, summary )
u + geom_boxplot() + geom_point()
u + geom_boxplot(size=1.2) + geom_point()
u = ggplot(data = df, aes(x=genre, y=audirat, colour=genre))
u + geom_boxplot(size=1.2) + geom_point()
u + geom_boxplot(size=1.1) + geom_point()
u + geom_boxplot(size=1) + geom_point()
head(df)
v = ggplot(data=df, aes(x=budget))
v + geom_histogram()
v + geom_histogram(fill=genre)
v + geom_histogram(fill='genre')
v + geom_histogram(bandwidth=10, fill='genre')
v + geom_histogram(bandwidth=10, aes(fill=genre))
v + geom_histogram(bindwidth=10, aes(fill=genre))
v + geom_histogram(binwidth=10, aes(fill=genre))
v + geom_histogram(binwidth=10, aes(fill=genre), colour='black'
v + geom_histogram(binwidth=10, aes(fill=genre), colour='black')
v + geom_histogram(binwidth=10, aes(fill=genre), colour='black')
v + geom_histogram(binwidth=10, aes(fill=genre), colour='black') + facet_grid(genre)
window()
windows()
v + geom_histogram(binwidth=10, aes(fill=genre), colour='black') + facet_grid(genre)
v + geom_histogram(binwidth=10, aes(fill=genre), colour='black') + facet_grid(genre, scales = 'free')
+ facet_grid(genre, scales = 'free') + xlab('orçamento (em milhões de dólares)')
v + geom_histogram(binwidth=10, aes(fill=genre), colour='black')
+ facet_grid(genre, scales = 'free') + xlab('orçamento (em milhões de dólares)')
v + geom_histogram(binwidth=10, aes(fill=genre),
colour='black')
+ facet_grid(genre, scales = 'free') + xlab('orçamento (em milhões de dólares)')
v + geom_histogram(binwidth=10, aes(fill=genre),
colour='black') + facet_grid(genre, scales = 'free') + xlab('orçamento (em milhões de dólares)')
v + geom_histogram(binwidth=10, aes(fill=genre),
colour='black') + facet_grid(genre, scales = 'free')
+ xlab('orçamento (em milhões de dólares)')
v + geom_histogram(binwidth=10, aes(fill=genre),
colour='black') + facet_grid(genre, scales = 'free') + xlab('orçamento (em milhões de dólares)')
k = ggplot(data=df, aes(x=audirat, y=rottom))
k = ggplot(data=df, aes(x=audirat, y=rottom, colour=genre))
k + geom_point()
k + geom_point(size=3)
k + geom_point(size=3) + facet_grid(year)
k + geom_point(size=3) + facet_grid(.~year)
k + geom_point(size=3) + facet_grid(.~year, scales = 'free')
windows()
k + geom_point(size=3) + facet_grid(.~year, scales = 'free')
k + geom_point(size=3) + facet_grid(.~genre, scales = 'free')
windows()
k + geom_point(size=3) + facet_grid(.~genre, scales = 'free')
k + geom_point(size=3) + facet_grid(genre~year, scales = 'free')
# facets for each year and  genre
windows()
k + geom_point(size=3) + facet_grid(genre~year, scales = 'free')
k + geom_point(aes(size=budget) + facet_grid(genre~year, scales = 'free')
windows()
k + geom_point(aes(size=budget) + facet_grid(genre~year, scales = 'free')
windows()
k + geom_point(aes(size=budget) + facet_grid(genre~year, scales = 'free')
windows()
windows()
k + geom_point(aes(size=budget) + facet_grid(genre~year, scales = 'free')
k + geom_point(aes(size=budget) + facet_grid(genre~year, scales = 'free')
k + geom_point(aes(size=budget) + facet_grid(genre~year, scales = 'free')
k + geom_point(aes(size=budget) + facet_grid(genre~year, scales = 'free'))
k + geom_point(aes(size=budget)) + facet_grid(genre~year, scales = 'free')
p = ggplot(data = df, aes(x=audirat, y=rottom,
size=budget, colour=genre))
p + geom_point()
windows()
p + geom_point()
p + geom_point() + xlim(50, 100)
p + geom_point() + xlim(50, 100) + ylim(50,100)
k + geom_point(size=3) + facet_grid(.~year, scales = 'free')
s = k + geom_point(size=3) + facet_grid(.~year, scales = 'free')
s
s + xlab('crítica da audiência') +
ylab('Rottem tomatoes')
s + xlab('crítica da audiência') +
ylab('Rottem tomatoes') +
main('Análise de filmes')
s + xlab('crítica da audiência') +
ylab('Rottem tomatoes') +
theme(axis.title.x = element_text(colour = 'blue', size=30) )
s + xlab('crítica da audiência') +
ylab('Rottem tomatoes') +
theme(axis.title.x = element_text(colour = 'blue', size=30),
axis.title.y = element_text(colour = 'green', size=30))
s + xlab('crítica da audiência') +
ylab('Rottem tomatoes') +
theme(axis.title.x = element_text(colour = 'blue', size=30),
axis.title.y = element_text(colour = 'green', size=30),
axis.text.x = element_text(20),
axis.text.y = element_text(20))
s + xlab('crítica da audiência') +
ylab('Rottem tomatoes') +
theme(axis.title.x = element_text(colour = 'blue', size=30),
axis.title.y = element_text(colour = 'green', size=30),
axis.text.x = element_text(20),
axis.text.y = element_text(20))
s + xlab('crítica da audiência') +
ylab('Rottem tomatoes') +
theme(axis.title.x = element_text(colour = 'blue', size=30),
axis.title.y = element_text(colour = 'green', size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20))
s + xlab('crítica da audiência') +
ylab('Rottem tomatoes') +
theme(axis.title.x = element_text(colour = 'blue', size=30),
axis.title.y = element_text(colour = 'green', size=30),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10))
s + xlab('crítica da audiência') +
ylab('Rottem tomatoes') +
theme(axis.title.x = element_text(colour = 'blue', size=30),
axis.title.y = element_text(colour = 'green', size=30),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
legend.title = element_text(size=20))
s + xlab('crítica da audiência') +
ylab('Rottem tomatoes') +
theme(axis.title.x = element_text(colour = 'blue', size=30),
axis.title.y = element_text(colour = 'green', size=30),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
legend.title = element_text(size=20),
legend.text = element_text(size=15))
s + xlab('crítica da audiência') +
ylab('Rottem tomatoes') +
theme(axis.title.x = element_text(colour = 'blue', size=30),
axis.title.y = element_text(colour = 'green', size=30),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
legend.title = element_text(size=20),
legend.text = element_text(size=15),
legend.position = c(1,1))
s + xlab('crítica da audiência') +
ylab('Rottem tomatoes') +
theme(axis.title.x = element_text(colour = 'blue', size=30),
axis.title.y = element_text(colour = 'green', size=30),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
legend.title = element_text(size=20),
legend.text = element_text(size=15),
legend.position = c(1,1),
legend.justification = c(1,1))
windows()
s + xlab('crítica da audiência') +
ylab('Rottem tomatoes') +
theme(axis.title.x = element_text(colour = 'blue', size=30),
axis.title.y = element_text(colour = 'green', size=30),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
legend.title = element_text(size=20),
legend.text = element_text(size=15),
legend.position = c(1,1),
legend.justification = c(1,1))
s + xlab('crítica da audiência') +
ylab('Rottem tomatoes') +
theme(axis.title.x = element_text(colour = 'blue', size=30),
axis.title.y = element_text(colour = 'green', size=30),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
legend.title = element_text(size=20),
legend.text = element_text(size=15),
legend.position = c(1,0),
legend.justification = c(1,1))
s + xlab('crítica da audiência') +
ylab('Rottem tomatoes') +
theme(axis.title.x = element_text(colour = 'blue', size=30),
axis.title.y = element_text(colour = 'green', size=30),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
legend.title = element_text(size=20),
legend.text = element_text(size=15),
legend.position = c(1,1),
legend.justification = c(1,1))
